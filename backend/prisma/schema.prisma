// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model User {
  id                String   @id @default(uuid())
  userId            String   @unique
  firstName         String
  lastName          String
  email             String   @unique
  password          String
  phone             String?
  role              String   @default("DELEGATE")
  institution       String?
  grade             String?
  profileImage      String?
  isActive          Boolean  @default(true)
  lastLogin         DateTime?
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt

  // Relations
  registration      Registration?

  @@map("users")
}

model Registration {
  id                    String   @id @default(uuid())
  userId                String   @unique
  firstName             String
  lastName              String
  email                 String
  phone                 String
  gender                String
  isKumaraguru          Boolean
  rollNumber            String?
  institutionType       String?
  institution           String?
  grade                 String?
  totalMuns             String
  committeePreference1  String
  portfolioPreference1  String
  committeePreference2  String
  portfolioPreference2  String
  committeePreference3  String
  portfolioPreference3  String
  idDocument            String
  munResume             String?
  status                String   @default("PENDING")
  allocatedCommitteeId  String?
  allocatedPortfolioId  String?
  paymentStatus         String   @default("PENDING")
  submittedAt           DateTime @default(now())
  updatedAt             DateTime @updatedAt

  // Relations
  user                  User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("registrations")
}

model Committee {
  id          String   @id @default(uuid())
  name        String
  description String
  capacity    Int
  registered  Int      @default(0)
  topics      String   // JSON string of topics
  chairs      String   // JSON string of chairs
  image       String?
  isActive    Boolean  @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@map("committees")
}

model Pricing {
  id                   String @id @default(uuid())
  internalDelegate     Int    @default(2500)
  externalDelegate     Int    @default(3500)
  accommodationCharge  Int    @default(1500)
  earlyBirdDiscount    Int    @default(500)
  groupDiscount        Int    @default(200)
  updatedAt            DateTime @updatedAt

  @@map("pricing")
}

model Contact {
  id          Int      @id @default(autoincrement())
  name        String
  email       String
  phone       String?
  subject     String
  message     String
  status      String   @default("pending") // pending, resolved, in-progress
  notes       String?
  submittedAt DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@map("contacts")
}

model Popup {
  id          String   @id @default(uuid())
  heading     String
  text        String
  isActive    Boolean  @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@map("popups")
}
